@model GuildCars.Models.UIViews.SalesPurchase

@{
    ViewBag.Title = "Purchase";

}

<h2>Purchase Vehicle</h2>
<div style="border: 2px solid black; padding:5px">
    <div class="row">
        <div class="col-md-12">
            <strong>@Model.vehicleDetails.VehicleId @Model.vehicleDetails.MakeName @Model.vehicleDetails.ModelTypeName</strong>
            <br />
            <div class="col-md-3">
                <img src="@Url.Content("~/Images/" + Model.vehicleDetails.ImageFileName)" />
            </div>
            <div class="col-md-3">
                <p><b>Body Style:  </b><div id='bodyStyleName'></div></p>
                <p><b>Trans:  </b><div id='transmissionTypeName'></div></p>
                <p><b>Color:  </b><div id='exteriorColorName'></div></p>
            </div>
            <div class="col-md-3">
                <p><b>Interior:  </b><div id='interiorColorName'></div></p>
                <p><b>Mileage:  </b></b><div id='mileage'></div></p>
                <p><b>VIN#:  </b>@Model.vehicleDetails.VIN</p>
            </div>
            <div class="col-md-3">
                <p><b>Sale Price:  </b>@Model.vehicleDetails.SalePrice.ToString("c0")</p>
                <p><b>MSRP:  </b>@Model.vehicleDetails.MSRP.ToString("c0")</p>
            </div>
        </div>
        <div style="padding-left:310px">
            <p class="text-justify"> <b>Description:  </b>@Model.vehicleDetails.VehicleDescription</p>
        </div>
    </div>
</div>
<h2>Sales Information</h2>
@using (Html.BeginForm("Purchase", "Sales", FormMethod.Post, new { enctype = "multipart/form-data", id = "formAddPurchase" }))
{
    @Html.ValidationSummary()
    @Html.HiddenFor(m => m.vehicleDetails.VehicleId)
    @Html.HiddenFor(m => m.vehicleDetails.SalePrice)
    @Html.HiddenFor(m => m.vehicleDetails.MSRP)
    @Html.HiddenFor(m => m.vehicleDetails.ImageFileName)
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label>Name</label>
                @Html.TextBoxFor(m => m.purchaseDetails.PurchaseName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Email</label>
                @Html.TextBoxFor(m => m.purchaseDetails.Email, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Street 1</label>
                @Html.TextBoxFor(m => m.purchaseDetails.Street1, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>City</label>
                @Html.TextBoxFor(m => m.purchaseDetails.City, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Zipcode</label>
                @Html.TextBoxFor(m => m.purchaseDetails.ZipCode, new { @class = "form-control" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label>Phone</label>
                @Html.TextBoxFor(m => m.purchaseDetails.PhoneNumber, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <br />
                <br />
                <br />
            </div>

            <div class="form-group">
                <label>Street 2</label>
                @Html.TextBoxFor(m => m.purchaseDetails.Street2, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>State</label>
                @Html.DropDownListFor(m => m.purchaseDetails.StateId, Model.States, new { @class = "form-control" })
            </div>

        </div>
    </div>
    <hr style="height:1px;border-width:0;color:black;background-color:black">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label>Purchase Price</label>
                @Html.TextBoxFor(m => m.purchaseDetails.PurchasePrice, new { @class = "form-control" })
            </div>
            <button class="btn btn-primary">Save</button>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label>Purchase Type</label>
                @Html.DropDownListFor(m => m.purchaseDetails.PurchaseTypeId, Model.PurchaseTypes, new { @class = "form-control" })
            </div>
        </div>
    </div>
            }
            @section scripts
 {
                <script>

        $(document).ready(function () {
            loadDetails();
        });

        function loadDetails() {
            var bodyStyleName = @(Html.Raw(Json.Encode(Model.vehicleDetails.BodyStyleName)));
            var transmissionTypeName = @(Html.Raw(Json.Encode(Model.vehicleDetails.TransmissionTypeName)));
            var exteriorColorName = @(Html.Raw(Json.Encode(Model.vehicleDetails.ExteriorColorName)));
            var interiorColorName = @(Html.Raw(Json.Encode(Model.vehicleDetails.InteriorColorName)));

            $("#bodyStyleName").append(isEmpty(bodyStyleName));
            $("#transmissionTypeName").append(isEmpty(transmissionTypeName));
            $("#exteriorColorName").append(isEmpty(exteriorColorName));
            $("#interiorColorName").append(isEmpty(interiorColorName));
            $("#mileage").append(mileage(@Model.vehicleDetails.Mileage));
        }

                    function numberWithCommas(x) {
                        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    }
                    function mileage (x) {
                        if (x < 1000) {
                            return "New"

                        } else {
                            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        }
                    }
                    function isEmpty(x) {
                        if (x === undefined || x == null || x.length === 0) {
                            return 'No Info Available';
                        }
                        return x;
        }
                </script>
            }
